
services:
  # ChromaDB simplificado
  chromadb:
    image: chromadb/chroma:latest
    container_name: financial-chromadb
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - PERSIST_DIRECTORY=/chroma/chroma
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
    # Sin healthcheck para debugging
    networks:
      - financial-network

  # Ingestion simplificado
  ingestion:
    build:
      context: .
      dockerfile: financial-ml/ingestion/Dockerfile
    container_name: financial-ingestion
    env_file: .env
    environment:
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - PYTHONPATH=/app
    working_dir: /app
    command: ["python", "-u", "financial-ml/ingestion/process_s3_documents.py"]
    depends_on:
      - chromadb
    networks:
      - financial-network
    restart: "no"

  # Backend simplificado
  backend:
    build:
      context: .
      dockerfile: financial-backend/Dockerfile
    container_name: financial-backend
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - CHROMA_DB_PATH=/app/chroma_db
      - PYTHONPATH=/app
    working_dir: /app
    command: ["uvicorn", "financial-backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    depends_on:
      - chromadb
    networks:
      - financial-network

  frontend:
    build:
      context: ./financial-frontend
      dockerfile: Dockerfile
    container_name: financial-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=production
    depends_on:
      - backend
      - chromadb
    networks:
      - financial-network
    restart: unless-stopped
    profiles:
      - frontend

  # Worker simplificado
  worker:
    build:
      context: .
      dockerfile: ./financial-ml/query_worker/Dockerfile
    container_name: financial-worker
    ports:
      - "5000:5000"
    env_file: .env
    environment:
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - PYTHONPATH=/app

volumes:
  # Volumen principal de ChromaDB - aqu√≠ se almacenan todas las bases de datos vectoriales
  chromadb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/chromadb_data
     
networks:
  financial-network:
    driver: bridge